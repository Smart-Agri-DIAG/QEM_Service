#!/usr/bin/env python
PACKAGE = "qem_service"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("image_topic",  str_t,    0, "Image topic",  "/camera/color/image_raw")
gen.add("depth_topic",  str_t,    0, "Depth topic",  "/camera/aligned_depth_to_color/image_raw")
gen.add("image_info_topic",  str_t,    0, "Image topic",  "/camera/color/camera_info")
gen.add("depth_info_topic",  str_t,    0, "Depth topic",  "/camera/aligned_depth_to_color/camera_info")
gen.add("bboxes_topic", str_t,    0, "Detection Bounding boxes",  "/BBoxes")
gen.add("tracker_topic", str_t,    0, "Tracking Bounding boxes",  "/TrackedBoxes")
gen.add("output_topic", str_t,    0, "Output topic",  "/Qem_out")
gen.add("valid_topic",  str_t,    0, "List of valid grapes topic",  "/Valid_out")

gen.add("anomaly",      bool_t,   0, "Activate anomaly estimation",  False)
gen.add("brix",         bool_t,   0, "Activate brix estimation",  True)
gen.add("color",        bool_t,   0, "Activate color estimation",  True)
gen.add("size",         bool_t,   0, "Activate size estimation",  True)
gen.add("berries",         bool_t,   0, "Activate berries size estimation",  False)
gen.add("position",         bool_t,   0, "Activate grapes position estimation",  False)

gen.add("compressed",   bool_t,   0, "Use compressed images",  False)
gen.add("gpu",          bool_t,   0, "Load models in gpu",  True)
gen.add("conf_tresh",   double_t, 0, "Detector confidence threshold",   .5, 0,  1)

exit(gen.generate(PACKAGE, "qem_service", "configuration_params"))